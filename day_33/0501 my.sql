USE HR;

CREATE TABLE EMP (
	-- 들어올때마다 순차적으로 숫자가 1씩 증가되게 하는 열 생성
	ID INT auto_increment,
    NAME VARCHAR(20) NOT NULL,
    TEL VARCHAR(20),
    
    CONSTRAINT EMP_ID_PK PRIMARY KEY(ID)
);

SELECT * FROM EMP;

DELETE FROM EMP
WHERE ID = 3;

INSERT INTO EMP (NAME, TEL)
VALUES ('A', '010-0000-0000');

INSERT INTO EMP (NAME, TEL)
VALUES ('B', '010-1111-2222');

DROP TABLE EMP;

CREATE TABLE DEPT (
	ID INT AUTO_INCREMENT,
    NAME VARCHAR(20) NOT NULL,
    LOC VARCHAR(20),
    GENDER VARCHAR(1) CHECK (GENDER IN ('M', 'F')),
    
		PRIMARY KEY(ID)
);

-------------------------------------------------------------------------------------------------------------------------
-- 오라클에서 했던 메세지 저장하는 테이블 만들기

DROP TABLE USERS;
CREATE TABLE USERS (
	ID INT AUTO_INCREMENT,
    USER_ID VARCHAR(20) NOT NULL,
    USER_PW VARCHAR(20) NOT NULL,
    USER_NAME VARCHAR(20) NOT NULL,
    USER_AGE INT,
    USER_TEL VARCHAR(20),
		
		CONSTRAINT USERS_ID_PK PRIMARY KEY (ID),
        CONSTRAINT USERS_ID_UK UNIQUE (USER_ID)
);

INSERT INTO USERS (USER_ID, USER_PW, USER_NAME) VALUES ('AAA', '111', 'A1');
INSERT INTO USERS (USER_ID, USER_PW, USER_NAME) VALUES ('BBB', '222', 'B1');
INSERT INTO USERS (USER_ID, USER_PW, USER_NAME) VALUES ('CCC', '333', 'C1');
INSERT INTO USERS (USER_ID, USER_PW, USER_NAME) VALUES ('DDD', '444', 'D1');
INSERT INTO USERS (USER_ID, USER_PW, USER_NAME) VALUES ('EEE', '555', 'E1');
INSERT INTO USERS (USER_ID, USER_PW, USER_NAME) VALUES ('AAA', '111', 'A1');

SELECT * FROM USERS;


DROP TABLE MESSAGES;
CREATE TABLE MESSAGES (
	-- USERS의 기본키가 ID이므로 이것을 참조하기 위해
	-- SENDER_ID, RECEIVER_ID 값을 INT로 설정해도 된다.
	-- 그러나 USERS 테이블에서 USER_ID 값을 NOTNULL로 하고 
	message_id INT AUTO_INCREMENT,
    SENDER_ID VARCHAR(20),
    RECEIVER_ID VARCHAR(20),
    CONTENTS VARCHAR(500) NOT NULL,
    SEND_DATE TIMESTAMP NOT NULL,
    RECEIVE_DATE TIMESTAMP,
		CONSTRAINT MESSAGES_ID_PK PRIMARY KEY (MESSAGE_ID),
        CONSTRAINT MESSAGES_SENDER_ID_FK FOREIGN KEY (SENDER_ID) REFERENCES USERS(USER_ID),
		CONSTRAINT MESSAGE_RECEIVER_ID_FK FOREIGN KEY (RECEIVER_ID) REFERENCES USERS(USER_ID)
);
SELECT * FROM MESSAGES;

-- AUTO_INCREMENT 설정된 열은 NULL 이나 0 으로 설정하면 알아서 증가한다.
INSERT INTO MESSAGES VALUES(NULL, 'AAA', 'CCC', 'HI CCC~ I''M AAA', NOW(), NULL);
INSERT INTO MESSAGES VALUES(NULL, 'AAA', 'DDD', 'HI DDD~ I''M AAA', NOW(), NULL);
INSERT INTO MESSAGES VALUES(NULL, 'AAA', 'EEE', 'HI EEE~ I''M AAA', NOW(), NULL);
INSERT INTO MESSAGES VALUES(NULL, 'BBB', 'EEE', 'HI EEE~ I''M BBB', NOW(), NULL);

UPDATE MESSAGES
SET RECEIVE_DATE = NOW()
WHERE MESSAGE_ID = 3;

select USER_ID, count(*) as "확인하지 않은 메세지의 개수"
from users u inner join MESSAGES m on u.USER_ID = m.RECEIVER_ID
where m.RECEIVE_DATE is null
group by u.USER_ID
order by u.USER_ID;


SELECT M.MESSAGE_ID AS "메세지 번호", S.USER_NAME AS "보낸 사람",
	R.USER_NAME AS "받는 사람", M.CONTENTS AS "메세지 내용",
    M.SEND_DATE AS "보낸 날짜",
    IFNULL(DATE_FORMAT(M.RECEIVE_DATE, '%Y-%m-%d %a %p %h:%i:%s'), '확인하지 않음') AS "받은 날짜"
FROM USERS S INNER JOIN MESSAGES M ON S.USER_ID = M.SENDER_ID
	INNER JOIN USERS R ON M.RECEIVER_ID = R.USER_ID;
    
    
SELECT * FROM MESSAGES;
SELECT * FROM USERS;

INSERT INTO USERS (USER_ID, USER_PW, USER_NAME) VALUES ('FFF', '333', 'F1');

UPDATE USERS
SET USER_ID = 'SEPRGJSOIERJGC'
WHERE ID = 6;

UPDATE USERS
SET USER_ID = 'ABC'
WHERE ID = 1;


---------------------------------------------------------------------------------------------
CREATE DATABASE HR_CASCADE;

USE HR_CASCADE;

CREATE TABLE USERS (
	ID INT AUTO_INCREMENT,
    USER_ID VARCHAR(20) NOT NULL,
    USER_PW VARCHAR(20) NOT NULL,
    USER_NAME VARCHAR(20) NOT NULL,
    USER_AGE INT,
    USER_TEL VARCHAR(20),
		
		CONSTRAINT USERS_ID_PK PRIMARY KEY (ID),
        CONSTRAINT USERS_ID_UK UNIQUE (USER_ID)
);
DROP TABLE USERS;
-- 참조하고있는 값이 수정되었을 때 참조되고 있는 모든 값들이 바뀜.
-- UPDATE, DELETE 가능
CREATE TABLE MESSAGES (
	message_id INT AUTO_INCREMENT,
    SENDER_ID VARCHAR(20),
    RECEIVER_ID VARCHAR(20),
    CONTENTS VARCHAR(500) NOT NULL,
    SEND_DATE TIMESTAMP NOT NULL,
    RECEIVE_DATE TIMESTAMP,
		CONSTRAINT MESSAGES_ID_PK PRIMARY KEY (MESSAGE_ID),
        CONSTRAINT MESSAGES_SENDER_ID_FK FOREIGN KEY (SENDER_ID) REFERENCES USERS(USER_ID)
			ON UPDATE CASCADE ON DELETE CASCADE,
		CONSTRAINT MESSAGE_RECEIVER_ID_FK FOREIGN KEY (RECEIVER_ID) REFERENCES USERS(USER_ID)
			ON UPDATE CASCADE ON DELETE CASCADE
);

INSERT INTO USERS (USER_ID, USER_PW, USER_NAME) VALUES ('AAA', '111', 'A1');
INSERT INTO USERS (USER_ID, USER_PW, USER_NAME) VALUES ('BBB', '222', 'B1');
INSERT INTO USERS (USER_ID, USER_PW, USER_NAME) VALUES ('CCC', '333', 'C1');
INSERT INTO USERS (USER_ID, USER_PW, USER_NAME) VALUES ('DDD', '444', 'D1');
INSERT INTO USERS (USER_ID, USER_PW, USER_NAME) VALUES ('EEE', '555', 'E1');
INSERT INTO USERS (USER_ID, USER_PW, USER_NAME) VALUES ('AAA', '111', 'A1');

INSERT INTO MESSAGES VALUES(NULL, 'AAA', 'CCC', 'HI CCC~ I''M AAA', NOW(), NULL);
INSERT INTO MESSAGES VALUES(NULL, 'AAA', 'DDD', 'HI DDD~ I''M AAA', NOW(), NULL);
INSERT INTO MESSAGES VALUES(NULL, 'AAA', 'EEE', 'HI EEE~ I''M AAA', NOW(), NULL);
INSERT INTO MESSAGES VALUES(NULL, 'BBB', 'EEE', 'HI EEE~ I''M BBB', NOW(), NULL);

SELECT * FROM USERS;
SELECT * FROM MESSAGES;

DROP TABLE MESSAGES;

UPDATE USERS
SET USER_ID = 'AAA'
WHERE ID = 1;

DELETE FROM USERS
WHERE ID = 1;

-- 보낸사람, 받는사람, 메세지내용 출력할 수 있는 VIEW 생성

CREATE VIEW MGSV
AS
SELECT S.USER_NAME AS "보낸 사람", R.USER_NAME AS "받는 사람" , M.CONTENTS AS "메세지 내용"
FROM USERS S INNER JOIN MESSAGES M ON S.USER_ID = M.SENDER_ID
	INNER JOIN USERS R ON M.RECEIVER_ID = R.USER_ID;

SELECT * FROM MGSV;












